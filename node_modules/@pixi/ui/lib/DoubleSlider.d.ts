import { FederatedPointerEvent } from '@pixi/events';
import { BaseSliderOptions, SliderBase } from './SliderBase';
import { Signal } from 'typed-signals';
/**
 * Creates a slider with range selection option.
 * @example
 * ```
 * const doubleSlider = new DoubleSlider({
 *      bg: 'slider_bg.png',
 *      fill: 'slider_progress.png',
 *      slider1: 'slider.png',
 *      slider2: 'slider.png',
 *  });
 *
 * doubleSlider.onChange.connect((value1, value2) =>
 *     console.log(`New slider range ${value1} - ${value2}`)
 * );
 * ```
 */
export declare class DoubleSlider extends SliderBase {
    protected options: BaseSliderOptions;
    private activeValue;
    /** Signal that fires when value have changed. */
    onChange: Signal<(value1: number, value2: number) => void>;
    /** Signal that fires when value is changing. */
    onUpdate: Signal<(value1: number, value2: number) => void>;
    constructor(options: BaseSliderOptions);
    /** Returns left value. */
    get value1(): number;
    /** Sets left value. */
    set value1(value1: number);
    /** Returns right value. */
    get value2(): number;
    /** Sets right value. */
    set value2(value2: number);
    protected update(event: FederatedPointerEvent): void;
    protected endUpdate(): void;
    private updateProgress;
}
//# sourceMappingURL=DoubleSlider.d.ts.map