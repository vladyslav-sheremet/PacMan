import { Container } from '@pixi/display';
import { ITextStyle, Text, TextStyle } from '@pixi/text';
import { ProgressBar } from './ProgressBar';
import { FederatedPointerEvent } from '@pixi/events';
export type BaseSliderOptions = {
    bg: Container | string;
    slider1: Container | string;
    slider2?: Container | string;
    fill?: Container | string;
    min?: number;
    max?: number;
    value1?: number;
    value2?: number;
    valueTextStyle?: TextStyle | Partial<ITextStyle>;
    showValue?: boolean;
    valueTextOffset?: {
        x?: number;
        y?: number;
    };
    fillOffset?: {
        x?: number;
        y?: number;
    };
};
/** Hepper class, used as a base for single or double slider creation. */
export declare class SliderBase extends ProgressBar {
    protected slider1: Container;
    protected slider2: Container;
    protected value1Text?: Text;
    protected value2Text?: Text;
    protected _value1: number;
    protected _value2: number;
    protected dragging: number;
    /** Minimal value. */
    min: number;
    /** Maximal value. */
    max: number;
    constructor(options: BaseSliderOptions);
    protected activate(): void;
    protected createSlider(sliderData: Container | string): Container;
    protected startUpdate(event: FederatedPointerEvent): void;
    protected endUpdate(): void;
    protected update(_event: FederatedPointerEvent): void;
}
//# sourceMappingURL=SliderBase.d.ts.map