{"version":3,"file":"CheckBox.js","sources":["../src/CheckBox.ts"],"sourcesContent":["import { Container } from '@pixi/display';\nimport { TextStyle, ITextStyle, Text } from '@pixi/text';\nimport { Signal } from 'typed-signals';\nimport { Switcher } from './Switcher';\nimport { getView } from './utils/helpers/view';\n\ntype CheckBoxStyle = {\n    checked: Container | string;\n    unchecked: Container | string;\n    text?: TextStyle | Partial<ITextStyle>;\n};\n\nexport type CheckBoxOptions = {\n    style: CheckBoxStyle;\n    text?: string;\n    checked?: boolean;\n};\n\n/**\n * Creates a container-based checkbox element.\n * @example\n * ```\n *  new CheckBox({\n *     style: {\n *         unchecked: `switch_off.png`,\n *         checked: `switch_on.png`,\n *     }\n * });\n *\n * ```\n */\nexport class CheckBox extends Switcher\n{\n    //* Text label */\n    public label!: Text;\n\n    /** Signal emitted when checkbox state changes. */\n    public onCheck: Signal<(state: boolean) => void>;\n\n    constructor(options: CheckBoxOptions)\n    {\n        const unchecked = getView(options.style.unchecked);\n        const checked = getView(options.style.checked);\n\n        super([unchecked, checked], ['onPress'], options.checked ? 1 : 0);\n\n        this.label = new Text(options.text ?? '', options.style.text);\n        this.label.visible = options.text.length > 0;\n        this.label.x = unchecked.width + 10;\n        this.label.y = (unchecked.height - this.label.height) / 2;\n\n        this.addChild(this.label);\n\n        this.onCheck = new Signal();\n\n        this.onChange.connect(() => this.onCheck.emit(this.checked));\n    }\n\n    /** Getter, which returns a checkbox state. */\n    public get checked(): boolean\n    {\n        return this.active === 1;\n    }\n\n    /** Setter, which sets a checkbox state. */\n    public set checked(checked: boolean)\n    {\n        this.switch(checked ? 1 : 0, 'onPress');\n    }\n\n    /**\n     * Setter, that sets a checkbox state without emitting a signal.\n     * @param checked\n     */\n    public forceCheck(checked: boolean)\n    {\n        this.forceSwitch(checked ? 1 : 0);\n    }\n}\n"],"names":["Switcher","getView","Text","Signal"],"mappings":";;;;;;;AA+BO,MAAM,iBAAiBA,iBAC9B,CAAA;AAAA,EAOI,YAAY,OACZ,EAAA;AACI,IAAA,MAAM,SAAY,GAAAC,YAAA,CAAQ,OAAQ,CAAA,KAAA,CAAM,SAAS,CAAA,CAAA;AACjD,IAAA,MAAM,OAAU,GAAAA,YAAA,CAAQ,OAAQ,CAAA,KAAA,CAAM,OAAO,CAAA,CAAA;AAE7C,IAAM,KAAA,CAAA,CAAC,SAAW,EAAA,OAAO,CAAG,EAAA,CAAC,SAAS,CAAG,EAAA,OAAA,CAAQ,OAAU,GAAA,CAAA,GAAI,CAAC,CAAA,CAAA;AAEhE,IAAK,IAAA,CAAA,KAAA,GAAQ,IAAIC,SAAK,CAAA,OAAA,CAAQ,QAAQ,EAAI,EAAA,OAAA,CAAQ,MAAM,IAAI,CAAA,CAAA;AAC5D,IAAA,IAAA,CAAK,KAAM,CAAA,OAAA,GAAU,OAAQ,CAAA,IAAA,CAAK,MAAS,GAAA,CAAA,CAAA;AAC3C,IAAK,IAAA,CAAA,KAAA,CAAM,CAAI,GAAA,SAAA,CAAU,KAAQ,GAAA,EAAA,CAAA;AACjC,IAAA,IAAA,CAAK,MAAM,CAAK,GAAA,CAAA,SAAA,CAAU,MAAS,GAAA,IAAA,CAAK,MAAM,MAAU,IAAA,CAAA,CAAA;AAExD,IAAK,IAAA,CAAA,QAAA,CAAS,KAAK,KAAK,CAAA,CAAA;AAExB,IAAK,IAAA,CAAA,OAAA,GAAU,IAAIC,mBAAO,EAAA,CAAA;AAE1B,IAAK,IAAA,CAAA,QAAA,CAAS,QAAQ,MAAM,IAAA,CAAK,QAAQ,IAAK,CAAA,IAAA,CAAK,OAAO,CAAC,CAAA,CAAA;AAAA,GAC/D;AAAA;AAAA,EAGA,IAAW,OACX,GAAA;AACI,IAAA,OAAO,KAAK,MAAW,KAAA,CAAA,CAAA;AAAA,GAC3B;AAAA;AAAA,EAGA,IAAW,QAAQ,OACnB,EAAA;AACI,IAAA,IAAA,CAAK,MAAO,CAAA,OAAA,GAAU,CAAI,GAAA,CAAA,EAAG,SAAS,CAAA,CAAA;AAAA,GAC1C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMO,WAAW,OAClB,EAAA;AACI,IAAK,IAAA,CAAA,WAAA,CAAY,OAAU,GAAA,CAAA,GAAI,CAAC,CAAA,CAAA;AAAA,GACpC;AACJ;;;;"}