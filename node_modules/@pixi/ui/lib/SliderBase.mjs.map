{"version":3,"file":"SliderBase.mjs","sources":["../src/SliderBase.ts"],"sourcesContent":["import { Container } from '@pixi/display';\nimport { Sprite } from '@pixi/sprite';\nimport { ITextStyle, Text, TextStyle } from '@pixi/text';\nimport { removeHitBox } from './utils/helpers/hitbox';\n\nimport { getView } from './utils/helpers/view';\nimport { ProgressBar } from './ProgressBar';\nimport { FederatedPointerEvent } from '@pixi/events';\n\nexport type BaseSliderOptions = {\n    bg: Container | string;\n    slider1: Container | string;\n    slider2?: Container | string;\n    fill?: Container | string;\n    min?: number;\n    max?: number;\n    value1?: number;\n    value2?: number;\n    valueTextStyle?: TextStyle | Partial<ITextStyle>;\n    showValue?: boolean;\n    valueTextOffset?: {\n        x?: number;\n        y?: number;\n    };\n    fillOffset?: {\n        x?: number;\n        y?: number;\n    };\n};\n\n/** Hepper class, used as a base for single or double slider creation. */\nexport class SliderBase extends ProgressBar\n{\n    protected slider1: Container;\n    protected slider2: Container;\n\n    protected value1Text?: Text;\n    protected value2Text?: Text;\n\n    protected _value1: number;\n    protected _value2: number;\n\n    protected dragging = 0;\n\n    /** Minimal value. */\n    public min = 0;\n\n    /** Maximal value. */\n    public max = 100;\n\n    constructor(options: BaseSliderOptions)\n    {\n        super({\n            bg: options.bg,\n            fill: options.fill ?? options.bg,\n            fillOffset: options.fillOffset\n        });\n\n        if (options.slider1)\n        {\n            this.slider1 = this.createSlider(options.slider1);\n\n            if (options.showValue)\n            {\n                this.value1Text = new Text('', options.valueTextStyle || { fill: 0xffffff });\n                this.value1Text.anchor.set(0.5);\n                this.addChild(this.value1Text);\n            }\n        }\n\n        if (options.slider2)\n        {\n            this.slider2 = this.createSlider(options.slider2);\n\n            if (options.showValue)\n            {\n                this.value2Text = new Text('', options.valueTextStyle || { fill: 0xffffff });\n                this.value2Text.anchor.set(0.5);\n                this.addChild(this.value2Text);\n            }\n        }\n\n        this.min = options.min ?? 0;\n        this.max = options.max ?? 100;\n\n        this.activate();\n    }\n\n    protected activate()\n    {\n        this.bg.interactive = true;\n        this.bg\n            .on('pointerdown', this.startUpdate, this)\n            .on('globalpointermove', this.update, this)\n            .on('pointerup', this.endUpdate, this)\n            .on('pointerupoutside', this.endUpdate, this);\n\n        if (this.slider1)\n        {\n            this.slider1.interactive = true;\n\n            this.slider1\n                .on('pointerdown', this.startUpdate, this)\n                .on('globalpointermove', this.update, this)\n                .on('pointerup', this.endUpdate, this)\n                .on('pointerupoutside', this.endUpdate, this);\n        }\n\n        if (this.slider2)\n        {\n            this.slider2.interactive = true;\n\n            this.slider2\n                .on('pointerdown', this.startUpdate, this)\n                .on('globalpointermove', this.update, this)\n                .on('pointerup', this.endUpdate, this)\n                .on('pointerupoutside', this.endUpdate, this);\n        }\n\n        removeHitBox(this.fill, this.value1Text, this.value2Text);\n    }\n\n    protected createSlider(sliderData: Container | string): Container\n    {\n        const slider = getView(sliderData);\n\n        slider.x = slider.width / 2;\n\n        const container = new Container();\n\n        container.addChild(slider);\n\n        if (slider instanceof Sprite)\n        {\n            slider.anchor.set(0.5);\n        }\n\n        container.y = this.bg.height / 2;\n\n        this.addChild(container);\n\n        return container;\n    }\n\n    protected startUpdate(event: FederatedPointerEvent)\n    {\n        this.dragging = 1;\n        this.update(event);\n    }\n\n    protected endUpdate()\n    {\n        if (!this.dragging) return;\n        this.dragging = 0;\n    }\n\n    protected update(_event: FederatedPointerEvent)\n    {\n    // override me\n    }\n}\n"],"names":[],"mappings":"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"}