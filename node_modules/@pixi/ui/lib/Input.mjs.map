{"version":3,"file":"Input.mjs","sources":["../src/Input.ts"],"sourcesContent":["import { Texture, utils, Ticker } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { Graphics } from '@pixi/graphics';\nimport { Sprite } from '@pixi/sprite';\nimport { TextStyle, Text } from '@pixi/text';\nimport { Signal } from 'typed-signals';\nimport { getView } from './utils/helpers/view';\n\nexport type InputOptions = {\n    bg?: Container | string;\n    textStyle?: Partial<TextStyle>;\n    placeholder?: string;\n    value?: string;\n    maxLength?: number;\n    align?: 'left' | 'center' | 'right';\n    padding?: number;\n};\n\n/**\n * Container-based component that creates an input to read the user's text.\n * @example\n * ```\n * new Input({\n *     bg: Sprite.from('input.png'),\n *     placeholder: 'Enter text'\n * });\n * ```\n */\nexport class Input extends Container\n{\n    private readonly bg: Container;\n    private readonly inputField: Text;\n    private readonly inputMask: Graphics;\n    private readonly placeholder: Text;\n    private _cursor: Sprite;\n    private editing = false;\n    private tick = 0;\n\n    private activation = false;\n    private readonly options: InputOptions;\n\n    /** Fires when input loses focus. */\n    public readonly onEnter: Signal<(text: string) => void>;\n\n    /** Fires every time input string is changed. */\n    public readonly onChange: Signal<(text: string) => void>;\n\n    constructor(options: InputOptions)\n    {\n        super();\n\n        this.options = options;\n        this.bg = getView(options.bg);\n        this.bg.cursor = 'text';\n        this.bg.interactive = true;\n\n        const defaultTextStyle = {\n            fill: 0x000000,\n            align: 'center'\n        } as TextStyle;\n\n        const textStyle = new TextStyle(options.textStyle ?? defaultTextStyle);\n\n        this.inputField = new Text('', textStyle);\n\n        this.inputMask = new Graphics()\n            .beginFill(0xffffff)\n            .drawRect(this.padding, this.padding, this.bg.width - (this.padding * 2), this.bg.height - (this.padding * 2));\n\n        this.inputField.mask = this.inputMask;\n\n        this._cursor = new Sprite(Texture.WHITE);\n        this._cursor.tint = Number(options.textStyle.fill) || 0x000000;\n        this._cursor.anchor.set(0.5);\n        this._cursor.width = 2;\n        this._cursor.height = this.inputField.height * 0.8;\n        this._cursor.alpha = 0;\n        this._cursor.mask = this.inputMask;\n\n        this.placeholder = new Text(options.placeholder, textStyle ?? defaultTextStyle);\n        this.placeholder.visible = !!options.placeholder;\n\n        this.value = options.value ?? '';\n\n        this.addChild(this.bg, this.inputField, this.placeholder, this._cursor, this.inputMask);\n\n        this.align();\n\n        this.cursor = 'text';\n        this.interactive = true;\n\n        this.on('pointertap', () => (this.activation = true));\n\n        if (utils.isMobile.any)\n        {\n            window.addEventListener('touchstart', () => this.handleActivation());\n\n            let keyboard = document.getElementById('v-keyboard') as HTMLInputElement;\n\n            if (!keyboard)\n            {\n                keyboard = document.createElement('input');\n\n                document.body.appendChild(keyboard);\n                keyboard.setAttribute('id', 'v-keyboard');\n\n                keyboard.style.opacity = '0';\n            }\n\n            keyboard.oninput = () =>\n            {\n                let value = keyboard.value;\n\n                const maxLength = this.options.maxLength;\n\n                if (maxLength && value.length > this.options.maxLength)\n                {\n                    value = value.substring(0, maxLength);\n                    keyboard.value = value;\n                }\n\n                this.value = value;\n\n                this.onChange.emit(this.value);\n            };\n        }\n        else\n        {\n            window.addEventListener('click', () =>\n            {\n                this.handleActivation();\n                this.onEnter.emit(this.value);\n            });\n\n            window.addEventListener('keydown', (e) =>\n            {\n                const key = e.key;\n\n                if (key === 'Backspace')\n                {\n                    this._delete();\n                }\n                else if (key === 'Escape' || key === 'Enter')\n                {\n                    this.stopEditing();\n                    this.onEnter.emit(this.value);\n                }\n                else if (key.length === 1) this._add(key);\n            });\n        }\n\n        this.onEnter = new Signal();\n        this.onChange = new Signal();\n\n        Ticker.shared.add((delta) => this.update(delta));\n    }\n\n    private _add(key: string): void\n    {\n        if (!this.editing)\n        {\n            return;\n        }\n\n        if (this.options.maxLength && this.value.length >= this.options.maxLength)\n        {\n            return;\n        }\n\n        this.value = this.value + key;\n\n        this.onChange.emit(this.value);\n    }\n\n    private _delete(): void\n    {\n        if (!this.editing || this.value.length === 0) return;\n        const array = this.value.split('');\n\n        array.pop();\n        this.value = array.join('');\n\n        this.onChange.emit(this.value);\n    }\n\n    private _startEditing(): void\n    {\n        this.tick = 0;\n        this.editing = true;\n        this.placeholder.visible = false;\n        this._cursor.alpha = 1;\n\n        if (utils.isMobile.any)\n        {\n            const keyboard = document.getElementById('v-keyboard') as HTMLInputElement;\n\n            keyboard.focus();\n            keyboard.click();\n            keyboard.value = this.value;\n        }\n\n        this.align();\n    }\n\n    private handleActivation()\n    {\n        this.stopEditing();\n\n        if (this.activation)\n        {\n            this._startEditing();\n\n            this.activation = false;\n        }\n    }\n\n    private stopEditing(): void\n    {\n        this._cursor.alpha = 0;\n        this.editing = false;\n\n        if (this.inputField.text === '')\n        {\n            this.placeholder.visible = true;\n        }\n\n        if (this.value.length === 0) this.placeholder.visible = true;\n        if (utils.isMobile.any) document.getElementById('v-keyboard')?.blur();\n\n        this.align();\n    }\n\n    private update(dt: number): void\n    {\n        if (!this.editing) return;\n        this.tick += dt * 0.1;\n        this._cursor.alpha = Math.round((Math.sin(this.tick) * 0.5) + 0.5);\n    }\n\n    private align()\n    {\n        const align = this.getAlign();\n\n        this.inputField.anchor.set(align, 0.5);\n        this.inputField.x = (this.bg.width * align) + (align === 1 ? -this.padding : this.padding);\n        this.inputField.y = this.bg.height / 2;\n\n        this.placeholder.anchor.set(align, 0.5);\n        this.placeholder.x = (this.bg.width * align) + (align === 1 ? -this.padding : this.padding);\n        this.placeholder.y = this.bg.height / 2;\n\n        this._cursor.x = this.getCursorPosX();\n        this._cursor.y = this.inputField.y;\n    }\n\n    private get padding(): number\n    {\n        return this.options.padding | 0;\n    }\n\n    private getAlign(): 0 | 1 | 0.5\n    {\n        const maxWidth = this.bg.width * 0.95;\n        const isOverflowed = this.inputField.width + (this.padding * 3) > maxWidth;\n\n        if (isOverflowed)\n        {\n            return this.editing ? 1 : 0;\n        }\n        switch (this.options.align)\n        {\n            case 'left':\n                return 0;\n            case 'center':\n                return 0.5;\n            case 'right':\n                return 1;\n            default:\n                return 0;\n        }\n    }\n\n    private getCursorPosX()\n    {\n        const align = this.getAlign();\n\n        switch (align)\n        {\n            case 0:\n                return this.inputField.x + this.inputField.width;\n            case 0.5:\n                return this.inputField.x + (this.inputField.width * 0.5);\n            case 1:\n                return this.inputField.x;\n            default:\n                return 0;\n        }\n    }\n\n    /** Sets the input text. */\n    set value(text: string)\n    {\n        this.inputField.text = text;\n\n        if (text.length !== 0)\n        {\n            this.placeholder.visible = false;\n        }\n        else\n        {\n            this.placeholder.visible = !this.editing;\n        }\n\n        this.align();\n    }\n\n    /** Return text of the input. */\n    get value(): string\n    {\n        return this.inputField.text;\n    }\n}\n"],"names":[],"mappings":"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"}