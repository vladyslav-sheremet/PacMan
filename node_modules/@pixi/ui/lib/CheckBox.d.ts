import { Container } from '@pixi/display';
import { TextStyle, ITextStyle, Text } from '@pixi/text';
import { Signal } from 'typed-signals';
import { Switcher } from './Switcher';
type CheckBoxStyle = {
    checked: Container | string;
    unchecked: Container | string;
    text?: TextStyle | Partial<ITextStyle>;
};
export type CheckBoxOptions = {
    style: CheckBoxStyle;
    text?: string;
    checked?: boolean;
};
/**
 * Creates a container-based checkbox element.
 * @example
 * ```
 *  new CheckBox({
 *     style: {
 *         unchecked: `switch_off.png`,
 *         checked: `switch_on.png`,
 *     }
 * });
 *
 * ```
 */
export declare class CheckBox extends Switcher {
    label: Text;
    /** Signal emitted when checkbox state changes. */
    onCheck: Signal<(state: boolean) => void>;
    constructor(options: CheckBoxOptions);
    /** Getter, which returns a checkbox state. */
    get checked(): boolean;
    /** Setter, which sets a checkbox state. */
    set checked(checked: boolean);
    /**
     * Setter, that sets a checkbox state without emitting a signal.
     * @param checked
     */
    forceCheck(checked: boolean): void;
}
export {};
//# sourceMappingURL=CheckBox.d.ts.map