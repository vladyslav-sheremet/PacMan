{"version":3,"file":"Button.js","sources":["../src/Button.ts"],"sourcesContent":["import { utils } from '@pixi/core';\nimport { Container } from '@pixi/display';\nimport { FederatedPointerEvent } from '@pixi/events';\nimport { Signal } from 'typed-signals';\n\n/**\n * Adds button events to a given container-based view\n *\n * so you can subscribe to them and use your container-based instance as a button.\n * @example\n * ```\n * const container = new Container();\n * const button = new Button(\n *      new Graphics()\n *          .beginFill(0xFFFFFF)\n *          .drawRoundedRect(0, 0, 100, 50, 15)\n * );\n *\n * buttonEvents.onPress.connect(() => console.log('onPress'));\n *\n * container.addChild(buttonEvents.view);\n * ```\n */\nexport class Button\n{\n    /** Container, given as a constructor parameter that is a button view. */\n    public view: Container;\n\n    /** Event that is fired when the button is pressed. */\n    public onPress: Signal<(btn?: this, e?: FederatedPointerEvent) => void>;\n\n    /** Event that is fired when the button is down. */\n    public onDown: Signal<(btn?: this, e?: FederatedPointerEvent) => void>;\n\n    /**\n     * Event that fired when a down event happened inside the button\n     * and up event happened inside or outside of the button\n     */\n    public onUp: Signal<(btn?: this, e?: FederatedPointerEvent) => void>;\n\n    /** Event that is fired when the mouse hovers the button. */\n    public onHover: Signal<(btn?: this, e?: FederatedPointerEvent) => void>;\n\n    /** Event that fired when the mouse is out of the view */\n    public onOut: Signal<(btn?: this, e?: FederatedPointerEvent) => void>;\n\n    /**\n     * Event that fired when mouse up event happens outside of the button\n     * after the down event happened inside the button boundaries.\n     */\n    public onUpOut: Signal<(btn?: this, e?: FederatedPointerEvent) => void>;\n\n    private _isDown: boolean;\n    private _isMouseIn: boolean;\n    private _enabled: boolean;\n\n    /**\n     * Turns a given container-based view into a button by adding all button events.\n     * @param {Container} view - Contained-based view\n     */\n    constructor(view: Container)\n    {\n        this.view = view;\n\n        this.createEvents();\n\n        this.enabled = true;\n    }\n\n    /**\n     * Method called when the button pressed.\n     * To be overridden.\n     * @param {FederatedPointerEvent} _e - event data\n     */\n    public down(_e?: FederatedPointerEvent)\n    {\n    // override me!\n    }\n\n    /**\n     * Method called when the button is up.\n     * To be overridden.\n     * @param {FederatedPointerEvent} _e - event data\n     */\n    public up(_e?: FederatedPointerEvent)\n    {\n    // override me!\n    }\n\n    /**\n     * Method called when the mouse hovers the button.\n     * To be overridden.\n     * This is fired only on PC.\n     * @param {FederatedPointerEvent} _e - event data\n     */\n    public hover(_e?: FederatedPointerEvent)\n    {\n    // override me!\n    }\n\n    /**\n     * Method called when the mouse press down the button.\n     * To be overridden.\n     * This is fired only on PC.\n     * @param {FederatedPointerEvent} _e - event data\n     */\n    public press(_e?: FederatedPointerEvent)\n    {\n    // override me!\n    }\n\n    /**\n     * Method called when the mouse leaves the button.\n     * To be overridden.\n     * This is fired only on PC.\n     * @param {FederatedPointerEvent} _e - event data\n     */\n    public out(_e?: FederatedPointerEvent)\n    {\n    // override me!\n    }\n\n    /**\n     * Method called when the up event happens outside of the button,\n     * after the down event happened inside the button boundaries.\n     * To be overridden.\n     * This is fired only on PC.\n     * @param {FederatedPointerEvent} _e - event data\n     */\n    public upOut(_e?: FederatedPointerEvent)\n    {\n    // override me!\n    }\n\n    /** Getter that returns if the button is down. */\n    get isDown(): boolean\n    {\n        return this._isDown;\n    }\n\n    /**\n     * Swither, which prevents all button events from firing.\n     * @param {boolean} enabled\n     */\n    set enabled(enabled: boolean)\n    {\n        this._enabled = enabled;\n        this.view.interactive = enabled;\n        this.view.cursor = enabled ? 'pointer' : 'default';\n\n        if (!enabled)\n        {\n            this._processUp();\n        }\n    }\n\n    /** Getter that returns button state, that controls if button events are firing. */\n    get enabled(): boolean\n    {\n        return this._enabled;\n    }\n\n    private _processUp(e?: FederatedPointerEvent)\n    {\n        if (this._isDown)\n        {\n            this.onUp.emit(this, e);\n        }\n        this._isDown = false;\n    }\n\n    private _processUpOut(e?: FederatedPointerEvent)\n    {\n        if (this._isDown)\n        {\n            this.onUp.emit(this, e);\n            this.onUpOut.emit(this, e);\n        }\n\n        this._isDown = false;\n    }\n\n    private _processOut(e?: FederatedPointerEvent)\n    {\n        if (this._isMouseIn)\n        {\n            this._isMouseIn = false;\n            this.onOut.emit(this, e);\n        }\n    }\n\n    private _upOut(e?: FederatedPointerEvent)\n    {\n        this.upOut(e);\n    }\n\n    private _out(e?: FederatedPointerEvent)\n    {\n        this.out(e);\n    }\n\n    private createEvents()\n    {\n        this.onPress = new Signal();\n        this.onDown = new Signal();\n        this.onUp = new Signal();\n        this.onHover = new Signal();\n        this.onOut = new Signal();\n        this.onUpOut = new Signal();\n\n        this.view.on('pointerdown', (e: FederatedPointerEvent) =>\n        {\n            this._isDown = true;\n            this.onDown.emit(this, e);\n        });\n\n        this.view.on('pointerup', (e: FederatedPointerEvent) =>\n        {\n            this._processUp(e);\n        });\n\n        this.view.on('pointerupoutside', (e: FederatedPointerEvent) =>\n        {\n            this._processUpOut(e);\n        });\n\n        this.view.on('pointerout', (e: FederatedPointerEvent) =>\n        {\n            this._processOut(e);\n        });\n\n        this.view.on('pointertap', (e: FederatedPointerEvent) =>\n        {\n            this._isDown = false;\n            this.onPress.emit(this, e);\n            this.press(e);\n        });\n\n        this.view.on('pointerover', (e: FederatedPointerEvent) =>\n        {\n            this._isMouseIn = true;\n            this.onHover.emit(this, e);\n        });\n\n        this.onDown.connect((_btn, e) =>\n        {\n            this.down(e);\n        });\n\n        this.onUp.connect((_btn, e) =>\n        {\n            this.up(e);\n        });\n\n        this.onUpOut.connect((_bth, e) =>\n        {\n            this._upOut(e);\n        });\n\n        if (!utils.isMobile.any)\n        {\n            this.onHover.connect((_bth, e) =>\n            {\n                this.hover(e);\n            });\n        }\n\n        this.onOut.connect((_bth, e) =>\n        {\n            this._out(e);\n        });\n    }\n}\n"],"names":["Signal","utils"],"mappings":"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"}