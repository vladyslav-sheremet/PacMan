import { Container } from '@pixi/display';
export type LayoutType = 'horizontal' | 'vertical';
export type LayoutOptions = {
    elementsMargin?: number;
    children?: Container[];
    vertPadding?: number;
    horPadding?: number;
};
/**
 * Container-based element for arranging Pixi containers based on their sizes.
 *
 * It is used inside elements with repeatable content, like {@link Select} or {@link ScrollBox}.
 * @example
 * ```
 * const layout = new Layout({
 *    children: [
        new Graphics().beginFill(0x000000).drawRect(0, 0, 50, 50),
        new Graphics().beginFill(0xFFFFFF).drawRect(0, 0, 50, 50),
 *    ],
 * });
 *
 * layout.addChild(new Graphics().beginFill(0x000000).drawRect(0, 0, 50, 50));
 * ```
 */
export declare class Layout extends Container {
    private readonly options?;
    /** Container, that holds all inner elements. */
    view: Container;
    /** Arrange direction. */
    type: LayoutType;
    /** Returns all arranged elements. */
    readonly children: Container[];
    constructor(options?: {
        type?: LayoutType;
    } & LayoutOptions);
    protected onChildrenChange(): void;
}
//# sourceMappingURL=Layout.d.ts.map