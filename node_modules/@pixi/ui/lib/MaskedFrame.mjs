import { Texture } from '@pixi/core';
import { Graphics } from '@pixi/graphics';
import { Sprite } from '@pixi/sprite';
import { getView } from './utils/helpers/view.mjs';

class MaskedFrame extends Graphics {
  constructor({ target, mask, borderWidth, borderColor }) {
    super();
    this.borderColor = borderColor;
    this.borderWidth = borderWidth;
    this.target = getView(target);
    this.targetMask = getView(mask);
    this.target.addChild(this.targetMask);
    this.target.mask = this.targetMask;
    if (borderWidth) {
      this.showBorder();
      this.target.x = borderWidth;
      this.target.y = borderWidth;
      const borderMask = typeof mask === "string" ? new Sprite(Texture.from(mask)) : mask.clone();
      borderMask.width += borderWidth * 2;
      borderMask.height += borderWidth * 2;
      this.mask = borderMask;
      this.addChild(borderMask);
    }
    this.addChild(this.target);
  }
  /** Shows a border. */
  showBorder() {
    this.beginFill(this.borderColor);
    const width = this.borderWidth * 2;
    this.drawRect(0, 0, this.target.width + width, this.target.height + width);
  }
  /** Hides a border. */
  hideBorder() {
    this.clear();
  }
}

export { MaskedFrame };
//# sourceMappingURL=MaskedFrame.mjs.map
