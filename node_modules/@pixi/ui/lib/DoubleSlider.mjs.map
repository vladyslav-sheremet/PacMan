{"version":3,"file":"DoubleSlider.mjs","sources":["../src/DoubleSlider.ts"],"sourcesContent":["import { FederatedPointerEvent } from '@pixi/events';\nimport type { DragObject } from './utils/HelpTypes';\nimport { BaseSliderOptions, SliderBase } from './SliderBase';\nimport { Signal } from 'typed-signals';\n\n/**\n * Creates a slider with range selection option.\n * @example\n * ```\n * const doubleSlider = new DoubleSlider({\n *      bg: 'slider_bg.png',\n *      fill: 'slider_progress.png',\n *      slider1: 'slider.png',\n *      slider2: 'slider.png',\n *  });\n *\n * doubleSlider.onChange.connect((value1, value2) =>\n *     console.log(`New slider range ${value1} - ${value2}`)\n * );\n * ```\n */\n\nexport class DoubleSlider extends SliderBase\n{\n    protected options: BaseSliderOptions;\n\n    private activeValue: 'value1' | 'value2';\n\n    /** Signal that fires when value have changed. */\n    public onChange: Signal<(value1: number, value2: number) => void> = new Signal();\n\n    /** Signal that fires when value is changing. */\n    public onUpdate: Signal<(value1: number, value2: number) => void> = new Signal();\n\n    constructor(options: BaseSliderOptions)\n    {\n        super(options);\n\n        this.options = options;\n\n        this.value2 = options.value2 ?? this.max;\n        this.value1 = options.value1 ?? this.min;\n    }\n\n    /** Returns left value. */\n    get value1(): number\n    {\n        return this._value1;\n    }\n\n    /** Sets left value. */\n    set value1(value1: number)\n    {\n        if (value1 === this._value1) return;\n\n        if (value1 < this.min) value1 = this.min;\n        if (value1 > this._value2) value1 = this._value2;\n\n        this._value1 = value1;\n\n        this.updateProgress();\n\n        const progress = ((this.max - this.min) / 100) * value1;\n\n        this.slider1.x = ((this.bg.width - this.slider1.width) / 100) * progress;\n\n        if (this.options.showValue)\n        {\n            this.value1Text.text = `${value1}`;\n\n            const sliderPosX = this.slider1.x + (this.slider1.width / 2);\n            const sliderPosY = this.slider1.y;\n\n            this.value1Text.x = sliderPosX + (this.options.valueTextOffset?.x ?? 0);\n            this.value1Text.y = sliderPosY + (this.options.valueTextOffset?.y ?? 0);\n        }\n\n        this.onUpdate?.emit(this.value1, this.value2);\n    }\n\n    /** Returns right value. */\n    get value2(): number\n    {\n        return this._value2;\n    }\n\n    /** Sets right value. */\n    set value2(value2: number)\n    {\n        if (value2 === this._value2) return;\n\n        if (value2 < this._value1) value2 = this._value1;\n        if (value2 > this.max) value2 = this.max;\n\n        this._value2 = value2;\n\n        this.updateProgress();\n\n        const progress = ((this.max - this.min) / 100) * value2;\n\n        this.slider2.x = ((this.bg.width - this.slider2.width) / 100) * progress;\n\n        if (this.options.showValue)\n        {\n            this.value2Text.text = `${value2}`;\n\n            const sliderPosX = this.slider2.x + (this.slider2.width / 2);\n            const sliderPosY = this.slider2.y;\n\n            this.value2Text.x = sliderPosX + (this.options.valueTextOffset?.x ?? 0);\n            this.value2Text.y = sliderPosY + (this.options.valueTextOffset?.y ?? 0);\n        }\n\n        this.onUpdate?.emit(this.value1, this.value2);\n    }\n\n    protected override update(event: FederatedPointerEvent)\n    {\n        if (!this.dragging) return;\n\n        const obj = event.currentTarget as DragObject;\n        const { x } = obj.parent.worldTransform.applyInverse(event.global);\n\n        const slider1Dist = Math.abs(x - this.slider1.x - this.slider1.width);\n        const slider2Dist = Math.abs(x - this.slider2.x);\n\n        if (!this.activeValue)\n        {\n            this.activeValue = slider1Dist < slider2Dist ? 'value1' : 'value2';\n        }\n\n        const progress = this.validate((x / this.bg.width) * 100);\n\n        if (this.activeValue === 'value1')\n        {\n            this.value1 = ((this.max - this.min) / 100) * progress;\n        }\n        else\n        {\n            this.value2 = ((this.max - this.min) / 100) * progress;\n        }\n    }\n\n    protected override endUpdate()\n    {\n        super.endUpdate();\n\n        this.activeValue = null;\n    }\n\n    private updateProgress()\n    {\n        this.progressStart = ((this.max - this.min) / 100) * this._value1;\n        this.progress = ((this.max - this.min) / 100) * this._value2;\n    }\n}\n"],"names":[],"mappings":"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"}